{"version":3,"sources":["components/NewsSection.js"],"names":["Meta","Card","NewsSection","request","useState","newsSection","setNewsSection","currentPage","setCurrentPage","useEffect","a","fetchNews","articles","fetchAPI","handlePageChange","page","newArticles","style","fontSize","fontWeight","marginTop","fontFamily","topHeading","length","map","article","key","urlToImage","md","span","sm","onClick","window","open","url","type","hoverable","width","marginBottom","height","cover","alt","title","src","source","name","ReactHtmlParser","extra","author","description","current","total","pageSize","onChange","linkText"],"mappings":"yPAMQA,EAASC,IAATD,KA8GOE,UA5GK,SAACC,GAAa,IAAD,EACOC,mBAAS,IADhB,mBACxBC,EADwB,KACXC,EADW,OAEOF,mBAAS,GAFhB,mBAExBG,EAFwB,KAEXC,EAFW,KAK/BC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACQC,YAAUR,GADlB,OACTS,EADS,OAEfN,EAAeM,GAFA,2CAAH,qDAIdC,KACC,CAACV,IAEJ,IAAMW,EAAgB,uCAAG,WAAOC,GAAP,eAAAL,EAAA,6DACvBF,EAAeO,GADQ,SAEGJ,YAAU,2BAC/BR,GAD8B,IAEjCY,KAAMA,KAJe,OAEjBC,EAFiB,OAMvBV,EAAeU,GANQ,2CAAH,sDActB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBACEC,MAAO,CACLC,SAAU,OACVC,WAAY,IACZC,UAAW,GACXC,WAAY,UAGblB,EAAQmB,cAIf,kBAAC,IAAD,KACGjB,EAAYkB,OAAS,EAClBlB,EAAYmB,KAAI,SAACC,EAASC,GAAV,MACS,KAAvBD,EAAQE,YACe,OAAvBF,EAAQE,WAAsB,KAC5B,kBAAC,IAAD,CAAKD,IAAKA,EAAKE,GAAI,CAAEC,KAAM,GAAKC,GAAI,CAAED,KAAM,KAC1C,kBAAC,IAAD,CACEE,QAAS,kBAAMC,OAAOC,KAAKR,EAAQS,IAAK,WACxCC,KAAK,QACLC,UAAU,OACVnB,MAAO,CAAEoB,MAAO,IAAKC,aAAc,GAAIC,OAAQ,KAC/CC,MACyB,KAAvBf,EAAQE,YACe,OAAvBF,EAAQE,WAAsB,KAC5B,yBACEc,IAAKhB,EAAQiB,MACbC,IACElB,EAAQE,WACJF,EAAQE,WACR,sCAKZe,MAC0B,KAAxBjB,EAAQmB,OAAOC,MAAuC,OAAxBpB,EAAQmB,OAAOC,KACzC,KACA,WAAaC,IAAgBrB,EAAQmB,OAAOC,MAElDE,MACqB,KAAnBtB,EAAQuB,QAAoC,OAAnBvB,EAAQuB,OAC7B,KACA,WAAaF,IAAgBrB,EAAQuB,SAG3C,4BAAKF,IAAgBrB,EAAQiB,QAC7B,kBAAC1C,EAAD,CAAMiD,YAAaH,IAAgBrB,EAAQwB,oBAKnD,aAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpB,KAAM,IACT,kBAAC,IAAD,CACEqB,QAAS3C,EACT4C,MAAO9C,EAAYkB,OACnB6B,SAxFO,EAyFPC,SAAUvC,MAKK,MAApBX,EAAQmD,SACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,QAGF,Q","file":"static/js/6.b9ccb172.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Row, Col, Divider, Card, Pagination, Input } from \"antd\";\r\nimport { fetchNews } from \"../api\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst NewsSection = (request) => {\r\n  const [newsSection, setNewsSection] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 5; // Number of articles per page\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const articles = await fetchNews(request);\r\n      setNewsSection(articles);\r\n    };\r\n    fetchAPI();\r\n  }, [request]);\r\n\r\n  const handlePageChange = async (page) => {\r\n    setCurrentPage(page);\r\n    const newArticles = await fetchNews({\r\n      ...request,\r\n      page: page, // Add a page parameter to the request\r\n    });\r\n    setNewsSection(newArticles);\r\n  };\r\n\r\n  //   const paginatedNews = newsSection.slice(\r\n  //     (currentPage - 1) * pageSize,\r\n  //     currentPage * pageSize\r\n  //   );\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h1\r\n            style={{\r\n              fontSize: \"40px\",\r\n              fontWeight: 900,\r\n              marginTop: 20,\r\n              fontFamily: \"serif\",\r\n            }}\r\n          >\r\n            {request.topHeading}\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {newsSection.length > 1\r\n          ? newsSection.map((article, key) =>\r\n              article.urlToImage === \"\" ||\r\n              article.urlToImage === null ? null : (\r\n                <Col key={key} md={{ span: 8 }} sm={{ span: 24 }}>\r\n                  <Card\r\n                    onClick={() => window.open(article.url, \"_blank\")}\r\n                    type=\"inner\"\r\n                    hoverable=\"true\"\r\n                    style={{ width: 380, marginBottom: 20, height: 480 }}\r\n                    cover={\r\n                      article.urlToImage === \"\" ||\r\n                      article.urlToImage === null ? null : (\r\n                        <img\r\n                          alt={article.title}\r\n                          src={\r\n                            article.urlToImage\r\n                              ? article.urlToImage\r\n                              : \"../components/assests/newsimg.jpg\"\r\n                          }\r\n                        />\r\n                      )\r\n                    }\r\n                    title={\r\n                      article.source.name === \"\" || article.source.name === null\r\n                        ? null\r\n                        : \"Source: \" + ReactHtmlParser(article.source.name)\r\n                    }\r\n                    extra={\r\n                      article.author === \"\" || article.author === null\r\n                        ? null\r\n                        : \"Author: \" + ReactHtmlParser(article.author)\r\n                    }\r\n                  >\r\n                    <h3>{ReactHtmlParser(article.title)}</h3>\r\n                    <Meta description={ReactHtmlParser(article.description)} />\r\n                  </Card>\r\n                </Col>\r\n              )\r\n            )\r\n          : \"Loading..\"}\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Pagination\r\n            current={currentPage}\r\n            total={newsSection.length}\r\n            pageSize={pageSize}\r\n            onChange={handlePageChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {request.linkText != null ? (\r\n        <Row>\r\n          <Col>\r\n            <Divider />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n"],"sourceRoot":""}